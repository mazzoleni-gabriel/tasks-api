// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// TopicPublisher is an autogenerated mock type for the TopicPublisher type
type TopicPublisher struct {
	mock.Mock
}

// Publish provides a mock function with given fields: ctx, body
func (_m *TopicPublisher) Publish(ctx context.Context, body interface{}) error {
	ret := _m.Called(ctx, body)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}) error); ok {
		r0 = rf(ctx, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTopicPublisher interface {
	mock.TestingT
	Cleanup(func())
}

// NewTopicPublisher creates a new instance of TopicPublisher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTopicPublisher(t mockConstructorTestingTNewTopicPublisher) *TopicPublisher {
	mock := &TopicPublisher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
